# -*- coding: utf-8 -*-
"""NM_PRO.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/github/sahana230810/Sahana-A/blob/main/NM_PRO.ipynb
"""



# Step 1: Import necessary libraries
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import classification_report, accuracy_score

# Step 2: Load the dataset (uploaded file)
df = pd.read_csv('dataset_traffic_accident_prediction1.csv')

print("Sample Data:")
print(df.head())
# Step 3: Display the first few rows
print("First 5 rows of the dataset:")
print(df.head())

# Step 4: Check for missing values
print("\nMissing values:")
print(df.isnull().sum())

# Step 5: Basic statistics
print("\nDataset Summary:")
print(df.describe())

# Step 6: Data visualization (e.g., correlation heatmap)
plt.figure(figsize=(10, 6))
sns.heatmap(df.corr(numeric_only=True), annot=True, cmap='coolwarm')
plt.title("Correlation Heatmap")
plt.show()

# Step 7: Preprocess the data
# Select numeric features and drop NaNs
df = df.select_dtypes(include=['number']).dropna()

# Example: Assume last column is the label
X = df.iloc[:, :-1]
y = df.iloc[:, -1]

# Step 8: Split the data
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Step 9: Train a RandomForestClassifier
model = RandomForestClassifier(n_estimators=100, random_state=42)
model.fit(X_train, y_train)

# Step 10: Evaluate the model
y_pred = model.predict(X_test)
print("\nAccuracy:", accuracy_score(y_test, y_pred))
print("\nClassification Report:")
print(classification_report(y_test, y_pred))